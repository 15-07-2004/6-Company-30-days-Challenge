2261. https://leetcode.com/problems/k-divisible-elements-subarrays/submissions/1164652756/

class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {
        unordered_set<string>s;
        int n=nums.size();
        for(int i=0;i<n;i++){
            int count=0;
            string temp="";
            for(int j=i;j<n;j++){
                auto rdm=to_string(nums[j])+"->";//to avoid misduplicacy of 1+9 and 19 in string
                temp+=rdm;
                if(nums[j]%p==0){
                      count++;
                }
                if(count<=k){
                    s.insert(temp);
                }
                if(count>k){
                    break;
                }
            }
        }
        return s.size();
    }
};
